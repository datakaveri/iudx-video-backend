version: "3.8"

networks:
  vs-net:
    external: true

volumes:
  pg_data: {}
  pg_data_cms: {}
  pgadmin: {}

services:
  lms_postgres:
    image: postgres:13
    container_name: lms_postgres
    restart: always
    logging:
      options:
        max-size: 10m
        max-file: "10"
    ports:
      - "127.0.0.1:5432:5432"
    environment:
      TZ: Asia/Kolkata
      POSTGRES_USER: ${LMS_POSTGRES_INITDB_USERNAME}
      POSTGRES_PASSWORD: ${LMS_POSTGRES_INITDB_PASSWORD}
      POSTGRES_DB: ${LMS_POSTGRES_INITDB_DATABASE}
    volumes:
      - ${SCHEMA_FILE_LMS}:/docker-entrypoint-initdb.d/schema.sql
      - pg_data:/var/lib/postgresql/data/
    networks: 
      - vs-net 


  cms_postgres:
    image: postgres:13
    container_name: cms_postgres
    restart: always
    logging:
      options:
        max-size: 10m
        max-file: "10"
    ports:
      - "127.0.0.1:5433:5432"
    environment:
      TZ: Asia/Kolkata
      POSTGRES_USER: ${CMS_POSTGRES_INITDB_USERNAME}
      POSTGRES_PASSWORD: ${CMS_POSTGRES_INITDB_PASSWORD}
      POSTGRES_DB: ${CMS_POSTGRES_INITDB_DATABASE}
    volumes:
      - ${SCHEMA_FILE_CMS}:/docker-entrypoint-initdb.d/schema.sql
      - pg_data_cms:/var/lib/postgresql/data/
    networks: 
      - vs-net     

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
      - pgadmin:/root/.pgadmin
    ports:
      - "5050:80"
    networks: 
      - vs-net 